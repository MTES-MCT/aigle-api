# Generated by Django 5.0.6 on 2024-06-03 15:19

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0014_objecttypecategory"),
    ]

    operations = [
        migrations.AlterField(
            model_name="geocommune",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name="geodepartment",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name="georegion",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name="objecttype",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name="objecttypecategory",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.AlterField(
            model_name="user",
            name="uuid",
            field=models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deleted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "communes",
                    models.ManyToManyField(
                        related_name="user_groups", to="core.geocommune"
                    ),
                ),
                (
                    "departments",
                    models.ManyToManyField(
                        related_name="user_groups", to="core.geodepartment"
                    ),
                ),
                (
                    "object_type_categories",
                    models.ManyToManyField(
                        related_name="user_groups", to="core.objecttypecategory"
                    ),
                ),
                (
                    "regions",
                    models.ManyToManyField(
                        related_name="user_groups", to="core.georegion"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserUserGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_group_rights",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(
                            choices=[
                                ("WRITE", "WRITE"),
                                ("ANNOTATE", "ANNOTATE"),
                                ("READ", "READ"),
                            ],
                            max_length=255,
                        ),
                        size=None,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_user_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_user_groups",
                        to="core.usergroup",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
